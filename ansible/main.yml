---

- name: Project Bootstrap
  hosts: all
  vars:
    ansible_serviceaccount_name: ansible
  tasks:
    - name: Get User Token
      uri:
        url: "https://{{ clusterhost }}/oauth/authorize?response_type=token&client_id=openshift-challenging-client"
        user: "{{ openshift_username }}"
        password: "{{ openshift_password }}"
        validate_certs: "{{ validate_certs }}"
        force_basic_auth: True
      register: login
      when: token is undefined

    - name: user token
      set_fact:
        token: "{{ (login.url | regex_search('access_token=([\\d\\w\\-_]*)')).split('=')[1] }}"
      when: token is undefined

    - name: Create Project
      command: >-
        {{ oc }} new-project {{ project_name }}
        --display-name='{{ project_display_name }}'
        --description='{{ project_description }}'
      ignore_errors: True

    - name: Create service account
      command: >-
        {{ oc }} create serviceaccount {{ ansible_serviceaccount_name }}
      ignore_errors: True

    - name: Add role to user
      command: >-
        {{ oc }}
        policy add-role-to-user admin -z {{ ansible_serviceaccount_name }}
      ignore_errors: True

    - name: Get Token
      command: "{{ oc }} sa get-token {{ ansible_serviceaccount_name }}"
      register: new_token

    - name: New Token
      set_fact:
        token: "{{ new_token.stdout }}"

- name: Configure project authorization
  hosts: all
  roles:
    - role: auth
- name: Setup Jenkins and registry push credentials
  hosts: dev
  roles:
    - role: jenkins
    - role: pusher
- name: Setup registry tokens
  hosts:
    - stage
    - prod
  roles:
    - role: puller
- name: Open up registry to anon pulls
  hosts: registry
  tasks:
    - name: Open registry to anonymous pulls
      command: "{{ oc }} policy add-role-to-group registry-viewer system:unauthenticated"
